---
# Copyright (C) 2018 Maciej Delmanowski <drybjed@gmail.com>
# Copyright (C) 2018 DebOps <https://debops.org/>
# SPDX-License-Identifier: GPL-3.0-only

- name: Detect the OS release manually, no Ansible facts available
  raw: grep -E '^VERSION=' /etc/os-release | tr -d '(")' | cut -d" " -f2
  register: python__register_raw_release
  changed_when: False
  check_mode: False

- name: Detect the OS release id and version_id, no Ansible facts available
  raw: >-
    \grep -Pzo "\nID=(\"?)\K.*(?=\1)" /etc/os-release  | tr -d '\000' ; 
    \grep -Pzo "\nVERSION_ID=(\"?)\K.*(?=\1)" /etc/os-release  | tr -d '\000'
  register: python__register_raw_release_ids
  changed_when: False
  check_mode: False

- when: >
    (python__register_raw_release_ids.stdout|d("")).strip() in
                            [ "debian11" ]
  block:
    - name: Update APT repositories, install core Python packages
      raw: |
        if [ -z "$(find /var/cache/apt/pkgcache.bin -mmin {{ python__raw_apt_cache_valid_time }})" ]; then
            apt-get -q update
        fi
        if [ "{{ python__raw_purge_v2 | bool | lower }}" = "true" ] && [ ! -f "/etc/ansible/facts.d/python.fact" ] ; then
            LANG=C apt-get --purge -yq remove {{ python__raw_purge_packages2 | join(" ") }}
        fi
        LANG=C apt-get --no-install-recommends -yq install {{ python__core_packages | join(" ") }}
      register: python__register_raw
      when: python__enabled|bool
      changed_when: (not python__register_raw.stdout
                         | regex_search('0 upgraded, 0 newly installed, 0 to remove and \d+ not upgraded\.') or
                     python__register_raw.stdout | regex_search('.+ set to manually installed\.'))

- when: >
    (python__register_raw_release_ids.stdout|d("")).strip() in
                            [ "almalinux8.4" ]
  block:
    - name: Update repositories with dnf, install core Python packages
      raw: |
        dnf update -y
        dnf install -y {{ python__core_packages | difference([ 'python3-apt' ]) | join(" ") }}
      register: python__register_raw
      when: python__enabled|bool
      changed_when: not python__register_raw.stdout
                         | regex_search('Nothing to do\.')

- name: Reset connection to the host
  meta: 'reset_connection'
